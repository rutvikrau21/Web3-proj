"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TryExtensionContent = void 0;
const jsx_runtime_1 = require("preact/jsx-runtime");
const clsx_1 = __importDefault(require("clsx"));
const hooks_1 = require("preact/hooks");
const arrow_left_svg_1 = __importDefault(require("../icons/arrow-left-svg"));
const laptop_icon_svg_1 = __importDefault(require("../icons/laptop-icon-svg"));
const safe_icon_svg_1 = __importDefault(require("../icons/safe-icon-svg"));
const TryExtensionContent_css_1 = __importDefault(require("./TryExtensionContent-css"));
function TryExtensionContent({ theme }) {
    const [clicked, setClicked] = (0, hooks_1.useState)(false);
    const handleInstallClick = (0, hooks_1.useCallback)(() => {
        window.open("https://api.wallet.coinbase.com/rpc/v2/desktop/chrome", "_blank");
    }, []);
    const handleClick = (0, hooks_1.useCallback)(() => {
        if (clicked) {
            window.location.reload();
        }
        else {
            handleInstallClick();
            setClicked(true);
        }
    }, [handleInstallClick, clicked]);
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("style", { children: TryExtensionContent_css_1.default }, void 0), (0, jsx_runtime_1.jsxs)("div", Object.assign({ class: (0, clsx_1.default)("-cbwsdk-try-extension", theme) }, { children: [(0, jsx_runtime_1.jsxs)("div", Object.assign({ class: "-cbwsdk-try-extension-column-half" }, { children: [(0, jsx_runtime_1.jsx)("h3", Object.assign({ class: "-cbwsdk-try-extension-heading" }, { children: "Or try the Coinbase Wallet browser extension" }), void 0), (0, jsx_runtime_1.jsxs)("div", Object.assign({ class: "-cbwsdk-try-extension-cta-container" }, { children: [(0, jsx_runtime_1.jsx)("button", Object.assign({ class: "-cbwsdk-try-extension-cta", onClick: handleClick }, { children: clicked ? "Refresh" : "Install" }), void 0), (0, jsx_runtime_1.jsx)("div", { children: !clicked && ((0, jsx_runtime_1.jsx)("img", { class: "-cbwsdk-try-extension-cta-icon", src: arrow_left_svg_1.default, alt: "arrow-left-icon" }, void 0)) }, void 0)] }), void 0)] }), void 0), (0, jsx_runtime_1.jsx)("div", Object.assign({ class: "-cbwsdk-try-extension-column-half" }, { children: (0, jsx_runtime_1.jsxs)("ul", Object.assign({ class: "-cbwsdk-try-extension-list" }, { children: [(0, jsx_runtime_1.jsxs)("li", Object.assign({ class: "-cbwsdk-try-extension-list-item" }, { children: [(0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)("img", { class: "-cbwsdk-try-extension-list-item-icon", src: laptop_icon_svg_1.default, alt: "laptop-icon" }, void 0) }, void 0), (0, jsx_runtime_1.jsx)("div", { children: "Connect with dapps with just one click on your desktop browser" }, void 0)] }), void 0), (0, jsx_runtime_1.jsxs)("li", Object.assign({ class: "-cbwsdk-try-extension-list-item" }, { children: [(0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)("img", { class: "-cbwsdk-try-extension-list-item-icon", src: safe_icon_svg_1.default, alt: "safe-icon" }, void 0) }, void 0), (0, jsx_runtime_1.jsx)("div", { children: "Add an additional layer of security by using a supported Ledger hardware wallet" }, void 0)] }), void 0)] }), void 0) }), void 0)] }), void 0)] }, void 0));
}
exports.TryExtensionContent = TryExtensionContent;
